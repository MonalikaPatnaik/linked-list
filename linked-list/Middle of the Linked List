Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.

class Solution {
public:
    int getlength(ListNode* head){                 
        ListNode*temp=head;
        int c=0;
        while(temp!=NULL){
           c++;
            temp=temp->next;
            
            
        }
        return c;
    }
  1--  ListNode* middleNode(ListNode* head) {
        ListNode*temp=head;
        int n=getlength(temp);
        int c=0;
        while(c!=(n/2)){
            
            temp=temp->next;
            c++;
        }
        return temp;
        
       2-- // even do using slow and fast pointer
        
        ListNode* middleNode(ListNode* head) {
        ListNode*slow=head;
        ListNode*fast=head;
        while(fast && fast->next){
            slow=slow->next;
            fast=fast->next->next;
        }
        return slow;
    }
};
    }
};
