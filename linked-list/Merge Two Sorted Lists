You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.


class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1==NULL)return list2;
        if(list2==NULL)return list1;
        // ListNode* ans;
        ListNode* temp;
        
        if(list1->val<=list2->val){
            temp=list1;
            list1=list1->next;
        }                                // can also make a dummy node having -1 as value then adding elements to the next of it in sorted order !!
        else{
            temp=list2;
            list2=list2->next;
        }
        ListNode* ans=temp;
        while(list1!=NULL && list2!=NULL){
            if(list1->val<=list2->val){
                temp->next=list1;
                list1=list1->next;
            }
             else{
                temp->next=list2;
                list2=list2->next;
            }
            temp=temp->next;
        }
        while(list1!=NULL){
            temp->next=list1;
            temp=temp->next;
            list1=list1->next;
        }
         while(list2!=NULL){
            temp->next=list2;
            temp=temp->next;
            list2=list2->next;
        }
        return ans;
    }
};
